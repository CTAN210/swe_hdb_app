Index: swe_loan_calculator-master/lib/page/mainpage.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:math';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport 'package:swe_loan_calculator/provider/google_sign_in.dart';\r\nimport 'package:pie_chart/pie_chart.dart';\r\nimport 'package:http/http.dart' as https;\r\nimport 'dart:convert';\r\nimport 'package:swe_loan_calculator/src/HDBListings.dart' as locations;\r\nimport 'main_fullListings.dart' as full_details;\r\nimport 'package:swe_loan_calculator/page/listviewpage.dart' as listviewpage;\r\nimport 'main_map.dart' as map_view;\r\nimport 'package:swe_loan_calculator/src/shoppingmalls.dart' as ShoppingMalls;\r\nimport 'package:provider/provider.dart';\r\nimport 'package:swe_loan_calculator/page/user_network_page.dart';\r\nimport 'package:firebase_database/firebase_database.dart';\r\n\r\n\r\nclass MyHomePage extends StatelessWidget {\r\n  MyHomePage({Key key, this.title}) : super(key: key);\r\n  final String title;\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n        appBar: AppBar(title: Text(\"HDB App\")),\r\n        body: Center(\r\n            child: Column(\r\n                children: <Widget>[\r\n                  FlatButton(\r\n                    onPressed: () {\r\n                      final provider =\r\n                      Provider.of<GoogleSignInProvider>(context, listen: false);\r\n                      provider.logout();\r\n                    },\r\n                    child: Container(\r\n                        alignment: Alignment.topRight,\r\n                        child: Text('Logout')\r\n                    ),\r\n                  ),\r\n                  GestureDetector(\r\n                    onTap: () {\r\n                      Navigator.push(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                          builder: (context) => UserNetworkPage(),\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: Text(\"network\",\r\n                        style: TextStyle(fontWeight: FontWeight.w900, fontSize: 30)),\r\n                  ),\r\n                  GestureDetector(\r\n                    onTap: () {\r\n                      Navigator.push(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                          builder: (context) => LoanCalPage(),\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: Text(\"Loan Calculator\",\r\n                        style: TextStyle(fontWeight: FontWeight.w900, fontSize: 30)),\r\n                  ),\r\n                  ElevatedButton(\r\n                      style: ElevatedButton.styleFrom(\r\n                          shape: CircleBorder(), primary: Colors.black),\r\n                      child: Container(\r\n                        width: 30,\r\n                        height: 30,\r\n                        alignment: Alignment.center,\r\n                        decoration: BoxDecoration(shape: BoxShape.circle),\r\n                        child:Icon(Icons.info_outline),\r\n                      ),\r\n\r\n                      onPressed: () {\r\n                        Navigator.push(\r\n                          context,\r\n                          MaterialPageRoute(\r\n                            builder: (context) => HelpPage(),\r\n                          ),\r\n                        );\r\n                      }),\r\n                  GestureDetector(\r\n                    onTap:(){\r\n                      Navigator.push(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                          builder: (context) => FilterPage(),\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: Text(\"Search/Filter\", style: TextStyle(fontWeight: FontWeight.w900, fontSize:30)), //Text\r\n                  ),\r\n                  GestureDetector(\r\n                    onTap:(){\r\n                      Navigator.push(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                          builder:(context) => map_view.MapPage(),\r\n                        ),\r\n                      );\r\n                    },\r\n                    child: Text(\"Map View\", style: TextStyle(fontWeight: FontWeight.w900, fontSize:30)), //Text\r\n                  ),\r\n                ]\r\n            )\r\n        ));\r\n  }\r\n}\r\nclass HelpPage extends StatelessWidget{\r\n  HelpPage({Key key, this.title}) : super(key: key);\r\n  final String title;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n        appBar: AppBar(\r\n          title: Text(\"Help\"),\r\n        ),\r\n        body: Center(\r\n            child: Container(\r\n                padding: EdgeInsets.all(10),\r\n                child: Column(\r\n                  mainAxisAlignment: MainAxisAlignment.start,\r\n                  crossAxisAlignment: CrossAxisAlignment.start,\r\n                  children: <Widget>[\r\n                    HelpPageView(),\r\n                  ],\r\n                ))));\r\n  }\r\n}\r\nclass HelpPageView extends StatefulWidget {\r\n  @override\r\n  HelpPageState createState() => HelpPageState();\r\n}\r\nclass HelpPageState extends State<HelpPageView>{\r\n\r\n\r\n  Widget build(BuildContext context){\r\n    return Column(\r\n      children: <Widget>[\r\n        Image.asset('assets/images/HDB Image.png'),\r\n        SizedBox(height: 10,),\r\n        Container(\r\n          alignment: Alignment.topLeft,\r\n          margin: const EdgeInsets.only(left: 15.0),\r\n          child: Text(\"About the application:\",\r\n            style: TextStyle(fontWeight: FontWeight.w900, fontSize: 20),\r\n            textAlign: TextAlign.left,\r\n          ),\r\n        ),\r\n\r\n        Container(\r\n          alignment: Alignment.topLeft,\r\n          margin: const EdgeInsets.all(15.0),\r\n          padding: const EdgeInsets.all(10.0),\r\n          height: 120.0,\r\n          decoration: BoxDecoration(\r\n            color: CupertinoColors.lightBackgroundGray,\r\n            border: null,\r\n          ),\r\n          child: Text(\"HDB App is a dual purpose mobile application which enables users to firstly, source for potential HDB listings based on your preferred filter criteria and secondly, calculate potential total and monthly loan / interest payments.\",\r\n            style: TextStyle(\r\n              color: Colors.black,\r\n              fontSize: 15,\r\n              letterSpacing: 0,\r\n            ),\r\n          ),\r\n        ),\r\n        Container(\r\n          alignment: Alignment.topLeft,\r\n          margin: const EdgeInsets.only(left: 15.0),\r\n          child: Text(\"Frequently Asked Questions:\",\r\n            style: TextStyle(fontWeight: FontWeight.w900, fontSize: 20),\r\n            textAlign: TextAlign.left,\r\n          ),\r\n        ),\r\n        Container(\r\n          alignment: Alignment.topLeft,\r\n          margin: const EdgeInsets.all(15.0),\r\n          padding: const EdgeInsets.all(10.0),\r\n          height: 270.0,\r\n          decoration: BoxDecoration(\r\n            color: CupertinoColors.lightBackgroundGray,\r\n            border: null,\r\n          ),\r\n          child:Column(\r\n            children:<Widget>[\r\n              Expanded(\r\n                child: SingleChildScrollView(\r\n                  scrollDirection: Axis.vertical,\r\n                  child: Text(\"\"\" \r\n1. Question: How is the total and monthly loan payment breakdown derived?\r\n\r\nAnswer: It is derived based on the HDB Loan Interest Rates. \r\n\r\n2. Question: I have no preferred criteria, is it possible to just view all available listings? \r\n\r\nAnswer: Yes! Simply press the 'Search' button without adjusting any of the filters! \r\n\r\n3. Question: Can I see the nearby facilities of listing choice? \r\n\r\nAnswer: Yes, you can do so in the Detailed Property View! Scroll down and you'll see a map  and scroll bar with colour coded nearby facilities.  Alternatively, you can click the View on Map icon and view the property on the actual Google Map. \r\n\r\n4. Question: How can I view a save a listing for easy viewing later on? \r\n\r\nAnswer: You can bookmark the listing through the listing view, map view or the individual property view! These bookmarked listings will appear on your home screen. If you change your mind, simply click the bookmark button again to un-bookmark it\r\n\r\n5.Question: I see a listing that I like, can I share it?\r\n\r\nAnswer: Yes of course! You can share the listing on Whatsapp, Messenger and Telegram through the share button located at the top right hand corner of the Property View!\r\n              \"\"\",\r\n                    style: TextStyle(\r\n                      color: Colors.black,\r\n                      fontSize: 15,\r\n                      letterSpacing: 0,\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        )],\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nclass LoanCalPage extends StatelessWidget {\r\n  LoanCalPage({Key key, this.title}) : super(key: key);\r\n  final String title;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GestureDetector(\r\n        onTap: () {\r\n          FocusScopeNode currentFocus = FocusScope.of(context);\r\n          if (!currentFocus.hasPrimaryFocus) {\r\n            currentFocus.unfocus();\r\n          }\r\n        },\r\n        child: Scaffold(\r\n            appBar: AppBar(\r\n              title: Text(\"Loan Calculator\"),\r\n            ),\r\n            body: Center(\r\n                child: Container(\r\n                    padding: EdgeInsets.all(10),\r\n                    child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.start,\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: <Widget>[\r\n                        _Slider(),\r\n                      ],\r\n                    )))));\r\n  }\r\n}\r\n\r\nclass _Slider extends StatefulWidget {\r\n  @override\r\n  _SliderState createState() => _SliderState();\r\n}\r\n\r\nclass _SliderState extends State<_Slider> {\r\n  static double _intValue = 0.0;\r\n  static int _loanTenureValue = 1;\r\n  static int _loanValue = 10;\r\n  static String _principalValue = \"500000\";\r\n  var myController = TextEditingController();\r\n\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n      children: <Widget>[\r\n        Container(\r\n            decoration: BoxDecoration(border: Border.all()),\r\n            padding: EdgeInsets.all(15),\r\n            child: Column(\r\n                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n                children: <Widget>[\r\n                  Text(\"Property Value\",\r\n                      style:\r\n                      TextStyle(fontWeight: FontWeight.w900, fontSize: 20)),\r\n                  Container(\r\n                    padding: EdgeInsets.all(15),\r\n                    child: TextField(\r\n                      keyboardType: TextInputType.number,\r\n                      controller: myController,\r\n                      decoration: new InputDecoration(\r\n                        focusedBorder: OutlineInputBorder(\r\n                          borderSide:\r\n                          BorderSide(color: Colors.blue, width: 2.0),\r\n                        ),\r\n                        contentPadding: const EdgeInsets.symmetric(\r\n                          vertical: 0.0,\r\n                          horizontal: 10.0,\r\n                        ),\r\n                        enabledBorder: OutlineInputBorder(\r\n                          borderSide:\r\n                          BorderSide(color: Colors.grey, width: 2.0),\r\n                        ),\r\n                        suffixIcon: IconButton(\r\n                          onPressed: () => myController.clear(),\r\n                          icon: Icon(Icons.clear),\r\n                        ),\r\n                      ),\r\n                      inputFormatters: <TextInputFormatter>[\r\n                        FilteringTextInputFormatter.digitsOnly\r\n                      ],\r\n                    ),\r\n                  ),\r\n                  SizedBox(height: 10),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Interest Rate (%)\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 150),\r\n                      Text(\r\n                        _intValue.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _intValue.toDouble(),\r\n                    min: 0.0,\r\n                    max: 4.0,\r\n                    divisions: 40,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _intValue.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _intValue = newValue;\r\n                      });\r\n                    },\r\n                  ),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Loan Tenure (Years)\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 120),\r\n                      Text(\r\n                        _loanTenureValue.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _loanTenureValue.toDouble(),\r\n                    min: 1,\r\n                    max: 30,\r\n                    divisions: 29,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _loanTenureValue.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _loanTenureValue = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Loan (%)\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 223),\r\n                      Text(\r\n                        _loanValue.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _loanValue.toDouble(),\r\n                    min: 10,\r\n                    max: 90,\r\n                    divisions: 80,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _loanValue.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _loanValue = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n                ])),\r\n        SizedBox(height: 10),\r\n        Row(\r\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n            children: <Widget>[\r\n              ElevatedButton(\r\n                  style: ElevatedButton.styleFrom(\r\n                      shape: CircleBorder(), primary: Colors.blue),\r\n                  child: Container(\r\n                    width: 50,\r\n                    height: 50,\r\n                    alignment: Alignment.center,\r\n                    decoration: BoxDecoration(shape: BoxShape.circle),\r\n                    child: Icon(Icons.update),\r\n                  ),\r\n                  onPressed: () {\r\n                    setState(\r\n                          () {\r\n                        _intValue = 0;\r\n                        _loanTenureValue = 1;\r\n                        _loanValue = 10;\r\n                        myController.clear();\r\n                      },\r\n                    );\r\n                  }),\r\n              ElevatedButton(\r\n                  style: ElevatedButton.styleFrom(\r\n                      shape: CircleBorder(), primary: Colors.blue),\r\n                  child: Container(\r\n                      width: 50,\r\n                      height: 50,\r\n                      alignment: Alignment.center,\r\n                      decoration: BoxDecoration(shape: BoxShape.circle),\r\n                      child: Text(\r\n                        \"GO\",\r\n                        style: TextStyle(fontSize: 16.0),\r\n                      )),\r\n                  onPressed: () {\r\n                    setState(\r\n                          () {\r\n                        //enter change page here\r\n                        _principalValue = myController.text;\r\n                        Navigator.push(\r\n                            context,\r\n                            MaterialPageRoute(\r\n                                builder: (context) => LoanVisualPage(\r\n                                    intValue:_intValue,\r\n                                    loanTenureValue:_loanTenureValue,\r\n                                    loanValue:_loanValue,\r\n                                    principalValue:checkNull(_principalValue)\r\n                                )\r\n                            )\r\n                        );\r\n                      },\r\n                    );\r\n                  }),\r\n            ]),\r\n      ],\r\n    );\r\n\r\n  }\r\n  static double checkNull(String principalValue){\r\n    try{return(double.parse(_principalValue));}\r\n    catch(e){\r\n      return 500000;}\r\n  }\r\n  static double getIntValue(){\r\n    return _intValue;\r\n  }\r\n  static double getPrincipalValue(){\r\n    return checkNull(_principalValue);\r\n  }\r\n  static int getLoanTenure(){\r\n    return _loanTenureValue;\r\n  }\r\n  static int getLoan(){\r\n    return _loanValue;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass LoanVisualPage extends StatelessWidget{\r\n  final  double intValue;\r\n  final int loanTenureValue;\r\n  final int loanValue;\r\n  final double principalValue;\r\n\r\n\r\n  LoanVisualPage({Key key, this.title, this.loanTenureValue,\r\n    this.principalValue, this.loanValue, this.intValue}) : super(key: key);\r\n  final String title;\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GestureDetector(\r\n        onTap: () {\r\n          FocusScopeNode currentFocus = FocusScope.of(context);\r\n          if (!currentFocus.hasPrimaryFocus) {\r\n            currentFocus.unfocus();\r\n          }\r\n        },\r\n        child: Scaffold(\r\n            appBar: AppBar(\r\n              title: Text(\"Loan Visualisation Page\"),\r\n            ),\r\n            body: Center(\r\n                child: Container(\r\n                    padding: EdgeInsets.all(10),\r\n                    child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.start,\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: <Widget>[\r\n                        _MonthlyVisualisation(),\r\n                        SizedBox(height: 20,),//intValue:intValue,\r\n                        _TotalVisualisation(),\r\n                      ],\r\n                    ))\r\n            )));\r\n  }\r\n}\r\n\r\nclass LoanController{\r\n  static double calculateTotalLoanAmount(double principalValue, int loanValue){\r\n    return (loanValue/100)*principalValue;\r\n  }\r\n  static double calculateDownPayment(double principalValue, int loanValue ){\r\n    return ((100-loanValue)/100)*principalValue;\r\n  }\r\n\r\n  static double calculateMonthlyPayment(double principalValue,double interestRate,int loanTenure,\r\n      int loanValue){\r\n    double totalLoanAmount = calculateTotalLoanAmount(principalValue, loanValue);\r\n    return (totalLoanAmount*(interestRate))/(1-1/pow(1+interestRate,loanTenure))/12;\r\n  }\r\n  static double calculateMonthlyInterest(double principalValue, double interestRate, int loanValue){\r\n    double totalLoanAmount = calculateTotalLoanAmount(principalValue, loanValue);\r\n    return (totalLoanAmount*interestRate)/12;\r\n  }\r\n  static double calculateMonthlyLoanAmount(double principalValue, double interestRate,\r\n      int loanTenure, int loanValue){\r\n    return calculateMonthlyPayment(principalValue, interestRate, loanTenure,loanValue)-\r\n        calculateMonthlyInterest(principalValue, interestRate,loanValue);\r\n  }\r\n}\r\n\r\n\r\nclass _MonthlyVisualisation extends StatefulWidget {\r\n  final double intValue;\r\n  final int loanTenureValue;\r\n  final int loanValue;\r\n  final double principalValue;\r\n\r\n  _MonthlyVisualisation({Key key, this.intValue,this.loanTenureValue,\r\n    this.principalValue, this.loanValue}) : super(key: key);\r\n  @override\r\n  _MonthlyVisualisationState createState() => _MonthlyVisualisationState();\r\n\r\n}\r\n\r\nclass _MonthlyVisualisationState extends State<_MonthlyVisualisation> {\r\n\r\n  //double interest=double.parse(intValue);\r\n  Map<String, double> dataMap = {\r\n    \"Loan Amount \": LoanController.calculateMonthlyLoanAmount(\r\n        _SliderState.getPrincipalValue(), _SliderState.getIntValue()/100,\r\n        _SliderState.getLoanTenure(),_SliderState.getLoan()),\r\n    \"Interest \": LoanController.calculateMonthlyInterest(_SliderState.getPrincipalValue(), _SliderState.getIntValue()/100,_SliderState.getLoan())};\r\n\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n        children: <Widget>[\r\n          Text('Monthly Payment Breakdown',style: TextStyle(fontWeight: FontWeight.w900, fontSize: 15),),\r\n          Container(\r\n            decoration: BoxDecoration(border: Border.all()),\r\n            padding: EdgeInsets.all(20),\r\n            child:\r\n            Container(\r\n                child: PieChart(\r\n                    dataMap: dataMap,\r\n                    chartType: ChartType.ring,\r\n                    chartRadius: 130,\r\n                    animationDuration: Duration(milliseconds: 500),\r\n                    chartValuesOptions: ChartValuesOptions(\r\n                      showChartValuesOutside: true,\r\n                    ),\r\n                    legendOptions: LegendOptions(\r\n                      legendTextStyle: TextStyle(fontWeight: FontWeight.w900, fontSize: 12),\r\n                    ),\r\n                    centerText:'\\$' + LoanController.calculateMonthlyPayment(_SliderState.getPrincipalValue(), _SliderState.getIntValue()/100,\r\n                        _SliderState.getLoanTenure(), _SliderState.getLoan()).toStringAsFixed(2) + \"\\n/month\"\r\n                )\r\n            ),\r\n\r\n          ),\r\n        ]\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass _TotalVisualisation extends StatefulWidget {\r\n  @override\r\n  _TotalVisualisationState createState() => _TotalVisualisationState();\r\n}\r\n\r\nclass _TotalVisualisationState extends State<_TotalVisualisation> {\r\n  Map<String, double> dataMap = {\r\n    \"Loan Amount \": LoanController.calculateTotalLoanAmount(_SliderState.getPrincipalValue(), _SliderState.getLoan()),\r\n    \"Down Payment \": LoanController.calculateDownPayment(_SliderState.getPrincipalValue(), _SliderState.getLoan()),};\r\n\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n      children: <Widget>[\r\n        Text('Total Payment Breakdown',style: TextStyle(fontWeight: FontWeight.w900, fontSize: 15),),\r\n        Container(\r\n            decoration: BoxDecoration(border: Border.all()),\r\n            padding: EdgeInsets.all(20),\r\n            child:\r\n            Container(\r\n                child: PieChart(\r\n                    dataMap: dataMap,\r\n                    chartType: ChartType.ring,\r\n                    chartRadius: 130,\r\n                    animationDuration: Duration(milliseconds: 500),\r\n                    chartValuesOptions: ChartValuesOptions(\r\n                      showChartValuesOutside: true,\r\n                    ),\r\n                    legendOptions: LegendOptions(\r\n                      legendTextStyle: TextStyle(fontWeight: FontWeight.w900, fontSize: 12),\r\n                    ),\r\n                    centerText:'\\$' +_SliderState.getPrincipalValue().toStringAsFixed(2)\r\n                )\r\n            )\r\n        ),\r\n      ],\r\n    );\r\n\r\n  }\r\n}\r\n\r\n/*class HDBListModel {\r\n\r\n  final String apiUrl = \"https://data.gov.sg/api/action/datastore_search?resource_id=42ff9cfe-abe5-4b54-beda-c88f9bb438ee&limit=92270\";\r\n\r\n  Future<List<dynamic>> fetchListings() async {\r\n    var result = await http.get(apiUrl);\r\n    //print('abc');\r\n    //print(json.decode(result.body)['result']['records']);\r\n    return json.decode(result.body)['result']['records'];\r\n  }\r\n\r\n  Future<HDBListingModel> getHDBListing() async {\r\n    final response = await rootBundle.loadString('assets/HDBListings.json');\r\n    return HDBListingModel.fromJson(json.decode(response));\r\n  }\r\n\r\n  static getPropertyValue(dynamic listing) {\r\n    return listing['resale_price'];\r\n  }\r\n\r\n  static getFlatType(dynamic listing){\r\n    return listing['flat_type'];\r\n  }\r\n\r\n  static getListingLocation(dynamic listing){\r\n    return listing['town'];\r\n  }\r\n\r\n  static getRemainLease(dynamic listing){\r\n    return listing['remaining_lease'];\r\n  }\r\n\r\n  static getFloorArea(dynamic listing){\r\n    return listing['floor_area_sqm'];\r\n  }\r\n\r\n\r\n}*/\r\n\r\nclass HDBListModel {\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass FilterPage extends StatelessWidget {\r\n  FilterPage({Key key, this.title}) : super(key: key);\r\n  final String title;\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GestureDetector(\r\n        onTap: () {\r\n          FocusScopeNode currentFocus = FocusScope.of(context);\r\n          if (!currentFocus.hasPrimaryFocus) {\r\n            currentFocus.unfocus();\r\n          }\r\n        },\r\n        child: Scaffold(\r\n            appBar: AppBar(\r\n              title: Text(\"Search/Filter\"),\r\n            ),\r\n            body: Center(\r\n                child: Container(\r\n                    padding: EdgeInsets.all(10),\r\n                    child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.start,\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: <Widget>[\r\n                        _Slider2(),\r\n                      ],\r\n                    )))));\r\n  }\r\n}\r\n\r\nclass _Slider2 extends StatefulWidget {\r\n\r\n\r\n  @override\r\n  _SliderState2 createState() => _SliderState2();\r\n\r\n}\r\n\r\nclass _SliderState2 extends State<_Slider2> {\r\n  static String _principalValue = \"500000\";\r\n\r\n  static int _upperPV = 200000;\r\n  static int _lowerPV = 200000;\r\n\r\n  static int _upperFlArea = 31;\r\n  static int _lowerFlArea = 31;\r\n\r\n  static int _remainLease = 0;\r\n\r\n  static int _value1 = 1;\r\n\r\n  static int _value2 = 1;\r\n\r\n\r\n  var myController = TextEditingController();\r\n\r\n  listviewpage.ListViewPage abc;\r\n\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n      children: <Widget>[\r\n        Container(\r\n            decoration: BoxDecoration(border: Border.all()),\r\n            padding: EdgeInsets.all(15),\r\n            child: Column(\r\n                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n                crossAxisAlignment: CrossAxisAlignment.stretch,\r\n                children: <Widget>[\r\n                  Text(\"Flat Type\",\r\n                      style:\r\n                      TextStyle(fontWeight: FontWeight.w900, fontSize: 20)),\r\n                  Container(\r\n                    padding: EdgeInsets.all(15),\r\n                    child: DropdownButton(\r\n                        value: _value1,\r\n                        items: [\r\n                          DropdownMenuItem(\r\n                            child: Text(\"1 Room\"),\r\n                            value: 1,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                              child: Text(\"2 Room\"),\r\n                              value: 2\r\n                          ),\r\n                          DropdownMenuItem(\r\n                              child: Text(\"3 Room\"),\r\n                              value: 3\r\n                          ),\r\n                          DropdownMenuItem(\r\n                              child: Text(\"4 Room\"),\r\n                              value: 4\r\n                          ),\r\n                          DropdownMenuItem(\r\n                              child: Text(\"5 Room\"),\r\n                              value: 5\r\n                          ),\r\n                          DropdownMenuItem(\r\n                              child: Text(\"Executive\"),\r\n                              value: 6\r\n                          ),\r\n                          DropdownMenuItem(\r\n                              child: Text(\"Multi-Generation\"),\r\n                              value: 7\r\n                          )\r\n                        ],\r\n                        onChanged: (value){\r\n                          setState((){\r\n                            _value1 = value;\r\n                          });\r\n                        }\r\n\r\n                    ),\r\n                  ),\r\n                  Text(\"Location\",\r\n                      style:\r\n                      TextStyle(fontWeight: FontWeight.w900, fontSize: 20)),\r\n                  Container(\r\n                    padding: EdgeInsets.all(15),\r\n                    child: DropdownButton(\r\n                        value: _value2,\r\n                        items: [\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Ang Mo Kio\"),\r\n                            value: 1,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Bedok\"),\r\n                            value: 2,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Bishan\"),\r\n                            value: 3,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Bukit Batok\"),\r\n                            value: 4,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Bukit Merah\"),\r\n                            value: 5,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Bukit Panjang\"),\r\n                            value: 6,\r\n                          ),\r\n                          DropdownMenuItem(\r\n                            child: Text(\"Bukit Timah\"),\r\n                            value: 7,\r\n                          )\r\n                        ],\r\n                        onChanged: (value){\r\n                          setState((){\r\n                            _value2 = value;\r\n                          });\r\n                        }\r\n\r\n                    ),\r\n                  ),\r\n                  SizedBox(height: 0),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Upper Property Value\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 50),\r\n                      Text(\r\n                        _upperPV.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _upperPV.toDouble(),\r\n                    min: 200000,\r\n                    max: 1000000,\r\n                    divisions: 1000,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _upperPV.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _upperPV = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Lower Property Value\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 50),\r\n                      Text(\r\n                        _lowerPV.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _lowerPV.toDouble(),\r\n                    min: 200000,\r\n                    max: 1000000,\r\n                    divisions: 29,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _lowerPV.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _lowerPV = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Upper Floor Area\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 100),\r\n                      Text(\r\n                        _upperFlArea.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _upperFlArea.toDouble(),\r\n                    min: 31,\r\n                    max: 249,\r\n                    divisions: 218,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _upperFlArea.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _upperFlArea = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Lower Floor Area\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 100),\r\n                      Text(\r\n                        _lowerFlArea.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _lowerFlArea.toDouble(),\r\n                    min: 31,\r\n                    max: 249,\r\n                    divisions: 218,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _lowerFlArea.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _lowerFlArea = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: <Widget>[\r\n                      Text(\r\n                        \"Remaining Lease\",\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                      SizedBox(width: 100),\r\n                      Text(\r\n                        _remainLease.toString(),\r\n                        style: TextStyle(\r\n                            fontWeight: FontWeight.w900, fontSize: 20),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                  Slider(\r\n                    value: _remainLease.toDouble(),\r\n                    min: 0,\r\n                    max: 100,\r\n                    divisions: 100,\r\n                    activeColor: Colors.blue,\r\n                    inactiveColor: Colors.grey,\r\n                    label: _remainLease.toString(),\r\n                    onChanged: (double newValue) {\r\n                      setState(() {\r\n                        _remainLease = newValue.round();\r\n                      });\r\n                    },\r\n                  ),\r\n\r\n                ])),\r\n        SizedBox(height: 1),\r\n        Row(\r\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n            children: <Widget>[\r\n              ElevatedButton(\r\n                  style: ElevatedButton.styleFrom(\r\n                      shape: CircleBorder(), primary: Colors.blue),\r\n                  child: Container(\r\n                    width: 50,\r\n                    height: 50,\r\n                    alignment: Alignment.center,\r\n                    decoration: BoxDecoration(shape: BoxShape.circle),\r\n                    child: Icon(Icons.update),\r\n                  ),\r\n                  onPressed: () {\r\n                    setState(\r\n                          () {\r\n                        _lowerPV = 200000;\r\n                        _upperPV = 200000;\r\n                        _lowerFlArea = 31;\r\n                        _upperFlArea = 31;\r\n                        _remainLease = 0;\r\n                        _value1 = 1;\r\n                        _value2 = 1;\r\n                        myController.clear();\r\n                      },\r\n                    );\r\n                  }),\r\n              ElevatedButton(\r\n                  style: ElevatedButton.styleFrom(\r\n                      shape: CircleBorder(), primary: Colors.blue),\r\n                  child: Container(\r\n                      width: 50,\r\n                      height: 50,\r\n                      alignment: Alignment.center,\r\n                      decoration: BoxDecoration(shape: BoxShape.circle),\r\n                      child: Text(\r\n                        \"GO\",\r\n                        style: TextStyle(fontSize: 16.0),\r\n                      )),\r\n                  onPressed: () async{\r\n                    //enter change page here\r\n                    final result = await Navigator.push(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                            builder: (context) => listviewpage.ListViewPage(\r\n                              upperPV: _upperPV,\r\n                              lowerPV: _lowerPV,\r\n                              upperFlArea: _upperFlArea,\r\n                              lowerFlArea: _lowerFlArea,\r\n                              value1: _value1,\r\n                              value2: _value2,\r\n                              remainLease: _remainLease,\r\n\r\n                            )\r\n                        )\r\n                    );\r\n                  }),\r\n            ]),\r\n\r\n      ],\r\n    );\r\n\r\n\r\n  }\r\n\r\n  static double checkNull(String principalValue){\r\n    try{return(double.parse(_principalValue));}\r\n    catch(e){\r\n      return 500000;}\r\n  }\r\n  static int getupperPV(){\r\n    return _upperPV;\r\n  }\r\n  static int getlowerPV(){\r\n    return _lowerPV;\r\n  }\r\n  static int getupperFlArea(){\r\n    return _upperFlArea;\r\n  }\r\n  static int getlowerFlArea(){\r\n    return _lowerFlArea;\r\n  }\r\n  static int getremainLease(){\r\n    return _remainLease;\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- swe_loan_calculator-master/lib/page/mainpage.dart	(revision 4731cee2db459715d0af4cdcbaeadc40ab3ce739)
+++ swe_loan_calculator-master/lib/page/mainpage.dart	(date 1616522324951)
@@ -695,7 +695,11 @@
 
 
 
+
 class FilterPage extends StatelessWidget {
+
+
+/// This class is used to implement the sliders that will be used to obtain variables that User can choose to filter out the HDB Listings
   FilterPage({Key key, this.title}) : super(key: key);
   final String title;
 
@@ -722,7 +726,11 @@
                       children: <Widget>[
                         _Slider2(),
                       ],
-                    )))));
+                    )
+                )
+            )
+        )
+    );
   }
 }
 
@@ -735,18 +743,22 @@
 }
 
 class _SliderState2 extends State<_Slider2> {
+
+
   static String _principalValue = "500000";
-
+  /// The default value of the upper limit for Principal Value of the listing.
   static int _upperPV = 200000;
+  /// The default value of the lower limit for Principal Value of the listing.
   static int _lowerPV = 200000;
-
+  /// The default value of the upper limit for Floor Area of the listing.
   static int _upperFlArea = 31;
+  /// The default value of the lower limit for Floor Area of the listing.
   static int _lowerFlArea = 31;
-
+  /// The default value for the remaining number of years left on the lease of the listing.
   static int _remainLease = 0;
-
+  /// The default value for the Flat Type of the listing.
   static int _value1 = 1;
-
+  /// The default value for the Location of the listing.
   static int _value2 = 1;
 
 
@@ -770,6 +782,7 @@
                   Container(
                     padding: EdgeInsets.all(15),
                     child: DropdownButton(
+                      /// This dropdownbutton is used for _value1, the flat type of the listing, where value:1 = "1 Room", etc.
                         value: _value1,
                         items: [
                           DropdownMenuItem(
@@ -815,6 +828,7 @@
                   Container(
                     padding: EdgeInsets.all(15),
                     child: DropdownButton(
+                      /// This dropdownbutton is used for _value2, the location type of the listing, where value:1 = "Ang Mo Kio", etc.
                         value: _value2,
                         items: [
                           DropdownMenuItem(
@@ -872,6 +886,7 @@
                     ],
                   ),
                   Slider(
+                    /// This slider is used to set the upper principal value of the listing.
                     value: _upperPV.toDouble(),
                     min: 200000,
                     max: 1000000,
@@ -902,6 +917,7 @@
                     ],
                   ),
                   Slider(
+                    /// This slider is used to set the lower principal value of the listing.
                     value: _lowerPV.toDouble(),
                     min: 200000,
                     max: 1000000,
@@ -932,6 +948,7 @@
                     ],
                   ),
                   Slider(
+                    /// This slider is used to set the upper floor area of the listing.
                     value: _upperFlArea.toDouble(),
                     min: 31,
                     max: 249,
@@ -962,6 +979,7 @@
                     ],
                   ),
                   Slider(
+                    /// This slider is used to set the lower floor area of the listing.
                     value: _lowerFlArea.toDouble(),
                     min: 31,
                     max: 249,
@@ -992,6 +1010,7 @@
                     ],
                   ),
                   Slider(
+                    /// This slider is used to set the remaining number of years left on the lease of the listing.
                     value: _remainLease.toDouble(),
                     min: 0,
                     max: 100,
@@ -1012,6 +1031,7 @@
             mainAxisAlignment: MainAxisAlignment.spaceBetween,
             children: <Widget>[
               ElevatedButton(
+                /// This is the reset button, used to set all the variables back to their default value.
                   style: ElevatedButton.styleFrom(
                       shape: CircleBorder(), primary: Colors.blue),
                   child: Container(
@@ -1036,6 +1056,7 @@
                     );
                   }),
               ElevatedButton(
+                /// This is the button used to confirm and pass the variables that will be used to filter the listings, into the next class ListViewPage.
                   style: ElevatedButton.styleFrom(
                       shape: CircleBorder(), primary: Colors.blue),
                   child: Container(
Index: swe_loan_calculator-master/lib/src/HDBListings.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:convert';\r\nimport 'package:json_annotation/json_annotation.dart';\r\nimport 'package:flutter/services.dart';\r\n\r\npart 'HDBListings.g.dart';\r\n\r\n\r\n@JsonSerializable()\r\nclass LatLng {\r\n  LatLng({\r\n    this.lat,\r\n    this.lng,\r\n  });\r\n\r\n  factory LatLng.fromJson(Map<String, dynamic> json) => _$LatLngFromJson(json);\r\n  Map<String, dynamic> toJson() => _$LatLngToJson(this);\r\n\r\n  final double lat;\r\n  final double lng;\r\n}\r\n\r\n@JsonSerializable()\r\nclass HDBListing{\r\n\r\n   String town;\r\n   String storey_range;\r\n   double floor_area_sqm;\r\n   String flat_model;\r\n   double lease_commence_date;\r\n   String remaining_lease;\r\n   double resale_price;\r\n   double longitude;\r\n   double latitude;\r\n   String address;\r\n   double ID;\r\n\r\n  HDBListing({\r\n    this.town,\r\n    this.storey_range,\r\n    this.floor_area_sqm,\r\n    this.flat_model,\r\n    this.lease_commence_date,\r\n    this.remaining_lease,\r\n    this.resale_price,\r\n    this.longitude,\r\n    this.latitude,\r\n    this.address,\r\n    this.ID\r\n  });\r\n\r\n  factory HDBListing.fromJson(Map<String, dynamic> json) => _$HDBListingFromJson(json);\r\n  Map<String, dynamic> toJson() => _$HDBListingToJson(this);\r\n\r\n  // HDBListing.fromJson(Map<String, dynamic> json) {\r\n  //   town = json['town'];\r\n  //    storey_range = json['storey_range'];\r\n  //    floor_area_sqm = json['floor_area_sqm'];\r\n  //    flat_model = json['flat_model'];\r\n  //    lease_commence_date = json['lease_commence_date'];\r\n  //    remaining_lease = json['remaining_lease'];\r\n  //    resale_price = json['resale_price'];\r\n  //    longitude = json['longitude'];\r\n  //    latitude = json['latitude'];\r\n  //    address = json['address'];\r\n  // }\r\n  //\r\n  // Map<String, dynamic> toJson() {\r\n  //  return {\r\n  //    'town': town,\r\n  //    'storey_range': storey_range,\r\n  //    'floor_area_sqm': floor_area_sqm,\r\n  //    'flat_model': flat_model,\r\n  //    'lease_commence_date': lease_commence_date,\r\n  //    'remaining_lease': remaining_lease,\r\n  //    'resale_price': resale_price,\r\n  //    'longitude': longitude,\r\n  //    'latitude': latitude,\r\n  //    'address': address\r\n  //  };\r\n  // }\r\n\r\n}\r\n\r\n@JsonSerializable()\r\nclass HDBListingModel {\r\n  HDBListingModel({\r\n    this.items\r\n  });\r\n\r\n  factory HDBListingModel.fromJson(Map<String, dynamic> json) =>\r\n      _$HDBListingModelFromJson(json);\r\n  Map<String, dynamic> toJson() => _$HDBListingModelToJson(this);\r\n\r\n  final List<HDBListing> items;\r\n}\r\n\r\n\r\nFuture<HDBListingModel> getHDBListing() async {\r\n  final response = await rootBundle.loadString('assets/HDBListings.json');\r\n  return HDBListingModel.fromJson(json.decode(response));\r\n}\r\n\r\n\r\n\r\n// do this at the parent widget -- pass data into variables and can pass data around
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- swe_loan_calculator-master/lib/src/HDBListings.dart	(revision 4731cee2db459715d0af4cdcbaeadc40ab3ce739)
+++ swe_loan_calculator-master/lib/src/HDBListings.dart	(date 1616521002573)
@@ -22,16 +22,29 @@
 @JsonSerializable()
 class HDBListing{
 
+  /// Each HDB Listing will have their own attributes as declared below.
+
+    /// town: The location of the listing, i.e. Ang Mo Kio, Bishan, Toa Payoh, etc.
    String town;
+   /// storey_range: The range of the floor of the listing. No exact storey is given.
    String storey_range;
+   /// floor_area_sqm: The floor area of the listing given in sqm.
    double floor_area_sqm;
+   /// flat_model: The flat model of the listing, i.e. New Generation, Improved, etc.
    String flat_model;
+   /// lease_commence_date: The date that the listing obtained its lease. Each lease expires after 99 years.
    double lease_commence_date;
+   /// remaining_lease: The time remaining on the lease of the listing, measured in Years and Months.
    String remaining_lease;
+   /// resale_price: The price at which the listing is being sold at.
    double resale_price;
+   /// longitude: The longitude value of the listing's location
    double longitude;
+   /// latitude: The latitude value of the listing's location
    double latitude;
+   /// address: The address of the listing, given by it's street name and block number.
    String address;
+   /// ID: The unique identifier number of each listing.
    double ID;
 
   HDBListing({
@@ -98,8 +111,4 @@
 Future<HDBListingModel> getHDBListing() async {
   final response = await rootBundle.loadString('assets/HDBListings.json');
   return HDBListingModel.fromJson(json.decode(response));
-}
-
-
-
-// do this at the parent widget -- pass data into variables and can pass data around
\ No newline at end of file
+}
\ No newline at end of file
Index: swe_loan_calculator-master/lib/page/listviewpage.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:swe_loan_calculator/src/HDBListings.dart' as locations;\r\nimport 'package:swe_loan_calculator/page/BookmarkView.dart';\r\nimport 'package:swe_loan_calculator/model/Bookmark.dart';\r\nimport 'package:firebase_database/firebase_database.dart';\r\n\r\n\r\n\r\n\r\nclass ListViewPage extends StatefulWidget {\r\n  final int upperPV;\r\n  final int lowerPV;\r\n  final int upperFlArea;\r\n  final int lowerFlArea;\r\n  final int value1;\r\n  final int value2;\r\n  final int remainLease;\r\n  final String user = FirebaseAuth.instance.currentUser.displayName;\r\n\r\n  ListViewPage(\r\n      {Key key,\r\n      this.title,\r\n      this.upperPV,\r\n      this.lowerPV,\r\n      this.upperFlArea,\r\n      this.lowerFlArea,\r\n      this.value1,\r\n      this.value2,\r\n      this.remainLease,\r\n      })\r\n      : super(key: key);\r\n  final String title;\r\n\r\n  @override\r\n  ListViewPageState createState() => ListViewPageState();\r\n}\r\n\r\nclass ListViewPageState extends State<ListViewPage> {\r\n\r\n  final List bookmarkList = [];\r\n  final List checkList = [];\r\n\r\n  Future<List<locations.HDBListing>> filtered_hdb;\r\n\r\n\r\n\r\n  Future<List<locations.HDBListing>> _onMapView() async {\r\n    final HDBData = await locations.getHDBListing();\r\n    final List<locations.HDBListing> finalList = [];\r\n    //print(HDBData);\r\n    if (true) {\r\n      for (final listing in HDBData.items) {\r\n        if (widget.lowerPV != 200000 ||\r\n            widget.upperPV != 200000 ||\r\n            widget.lowerFlArea != 31 ||\r\n            widget.upperFlArea != 31) {\r\n          if (widget.lowerPV < listing.resale_price &&\r\n              listing.resale_price < widget.upperPV &&\r\n              widget.lowerFlArea < listing.floor_area_sqm &&\r\n              listing.floor_area_sqm < widget.upperFlArea) {\r\n            finalList.add(listing);\r\n          }\r\n        }\r\n      }\r\n      return finalList;\r\n    }\r\n  }\r\n  final databaseReference = FirebaseDatabase.instance.reference();\r\n\r\n  DatabaseReference saveBookmark(BookMarkInfo bookMarkInfo) {\r\n    databaseReference.child('bookmark/').remove();\r\n    var id = databaseReference.child('bookmark/').push();\r\n    id.set(bookMarkInfo.toJson());\r\n    return id;\r\n  }\r\n/*  BookMarkInfo createBookMarkInfo(record) {\r\n    var attributes = <String, dynamic>{\r\n      'author': '',\r\n      'bookMarkList': [],\r\n    };\r\n    record.forEach((key, value) => {attributes[key] = value});\r\n\r\n    var bookMarkInfo = BookMarkInfo(attributes['bookMarkList'], attributes['author']);\r\n    bookMarkInfo.bookMarkedList = List.from(attributes['bookMarkList']);\r\n    return bookMarkInfo;\r\n\r\n  }\r\n\r\n  Future<List<BookMarkInfo>> getAllBookMarks() async {\r\n    var dataSnapshot = await databaseReference.child('bookmark/').once();\r\n    var bookMarkInfos = <BookMarkInfo>[];\r\n    if (dataSnapshot.value != null) {\r\n      dataSnapshot.value.forEach((key, value){\r\n        var bookMarkInfo = createBookMarkInfo(value);\r\n        //BookMarkInfo.setId(databaseReference.child('bookmarks/'+ key));\r\n        bookMarkInfos.add(bookMarkInfo);\r\n\r\n      });\r\n    }\r\n    return bookMarkInfos;\r\n  }\r\n  */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    filtered_hdb = _onMapView();\r\n    var BookMarkItem = BookMarkInfo(bookmarkList, widget.user);\r\n\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text('HDB Lists (Filtered)'),\r\n        actions: <Widget>[\r\n          IconButton(\r\n              icon: const Icon(Icons.list),\r\n              onPressed: () {\r\n                setState(() {\r\n                  Navigator.push(\r\n                    context,\r\n                    MaterialPageRoute(\r\n                        builder: (context) => BookMarkPage(BookMarkItem,checkList)),\r\n                  );\r\n                });\r\n              })\r\n        ],\r\n      ),\r\n      body: Container(\r\n          child: FutureBuilder<List<locations.HDBListing>>(\r\n              future: filtered_hdb,\r\n              builder: (context, snapshot) {\r\n                if (snapshot.hasData) {\r\n                  List<locations.HDBListing> filtered_hdb1 = snapshot.data;\r\n                  return ListView.builder(\r\n                      padding: EdgeInsets.all(8),\r\n                      itemCount: snapshot.data.length,\r\n                      itemBuilder: (BuildContext context, int index) {\r\n\r\n                        final isBookmarked =\r\n                        //BookMarkItem.bookMarkedList.contains(filtered_hdb1[index]);\r\n                        checkList.contains(filtered_hdb1[index].ID);\r\n\r\n\r\n\r\n                        return Card(\r\n                          child: ListTile(\r\n                            onTap: () {\r\n                              Navigator.pushNamed(context, '/third',\r\n                                  arguments: filtered_hdb1[index]);\r\n                            },\r\n                            title: Text(\"price: \" +\r\n                                filtered_hdb1[index].resale_price.toString() +\r\n                                '\\n' +\r\n                                'address: ' +\r\n                                filtered_hdb1[index].address +\r\n                                '\\n' +\r\n                                'floor_area: ' +\r\n                                filtered_hdb1[index].floor_area_sqm.toString() +\r\n                                '\\n' +\r\n                                'remaining_lease: ' +\r\n                                filtered_hdb1[index].remaining_lease),\r\n                            trailing: IconButton(\r\n                              icon: Icon(\r\n                                isBookmarked\r\n                                    ? Icons.bookmark\r\n                                    : Icons.bookmark_border,\r\n                                color: isBookmarked ? Colors.black : null,\r\n                              ),\r\n                              onPressed: () {\r\n                                setState(() {\r\n                                  if (isBookmarked) {\r\n                                    //BookMarkItem.bookMarkedList.remove(filtered_hdb1[index]);\r\n                                    checkList.remove(filtered_hdb1[index].ID);\r\n                                  } else {\r\n                                    //BookMarkItem.bookMarkedList.add(filtered_hdb1[index]);\r\n                                    checkList.add(filtered_hdb1[index].ID);\r\n                                  }\r\n                                });\r\n                                BookMarkItem.bookMarkedList=checkList;\r\n\r\n                                saveBookmark(BookMarkItem);\r\n                              },\r\n                            ),\r\n                          ),\r\n                        );\r\n                      });\r\n                } else {\r\n                  return Center(child: CircularProgressIndicator());\r\n                }\r\n              })),\r\n      bottomNavigationBar: BottomAppBar(\r\n        shape: const CircularNotchedRectangle(),\r\n        child: Container(\r\n          height: 50.0,\r\n        ),\r\n      ),\r\n      floatingActionButton: FloatingActionButton(\r\n        onPressed: () {\r\n          Navigator.pushNamed(context, '/fourth',\r\n              //arguments: );\r\n              arguments: _onMapView());\r\n        },\r\n        child: const Icon(Icons.map),\r\n      ),\r\n      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- swe_loan_calculator-master/lib/page/listviewpage.dart	(revision 4731cee2db459715d0af4cdcbaeadc40ab3ce739)
+++ swe_loan_calculator-master/lib/page/listviewpage.dart	(date 1616519780178)
@@ -7,8 +7,6 @@
 import 'package:firebase_database/firebase_database.dart';
 
 
-
-
 class ListViewPage extends StatefulWidget {
   final int upperPV;
   final int lowerPV;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLogFilters\">\r\n    <option name=\"TOOL_WINDOW_CONFIGURED_FILTER\" value=\"Show only selected application\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"36e3cabf-a4c7-4422-8c6c-d3b9aa815eda\" name=\"Default Changelist\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[]\" />\r\n  <component name=\"ExportToHTMLSettings\">\r\n    <option name=\"OUTPUT_DIRECTORY\" value=\"$PROJECT_DIR$/../swe_loan_calculator-master\\exportToHTML\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Dart File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1p94AfkojNUXEmWOrSVvVxzbdJY\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"android.sdk.path\" value=\"$USER_HOME$/AppData/Local/Android/Sdk\" />\r\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\r\n    <property name=\"io.flutter.reload.alreadyRun\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../swe_loan_calculator-master\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"vcs.Git\" />\r\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\hkorj\\OneDrive\\Desktop\\swe_loan_calculator-master\\swe_loan_calculator-master\\android\\app\" />\r\n      <recent name=\"C:\\Users\\hkorj\\OneDrive\\Desktop\\swe_loan_calculator-master\\swe_loan_calculator-master\\android\\app\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\waich\\Desktop\\20-3 code\\swe_loan_calculator-master\\swe_loan_calculator-master\\assets\" />\r\n      <recent name=\"C:\\Users\\waich\\Desktop\\20-3 code\\swe_loan_calculator-master\\swe_loan_calculator-master\\assets\\images\" />\r\n      <recent name=\"C:\\Users\\waich\\Desktop\\20-3 code\\swe_loan_calculator-master\\swe_loan_calculator-master\\lib\" />\r\n      <recent name=\"C:\\Users\\waich\\Desktop\\20-3 code\\swe_loan_calculator-master\\swe_loan_calculator-master\\lib\\page\" />\r\n      <recent name=\"C:\\Users\\hkorj\\OneDrive\\Desktop\\swe_loan_calculator-master\\swe_loan_calculator-master\\lib\\page\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Flutter.main.dart\">\r\n    <configuration name=\"main.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/swe_loan_calculator-master/lib/main.dart\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main_fullListings.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/swe_loan_calculator-master/lib/page/main_fullListings.dart\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"mapview.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/swe_loan_calculator-master/lib/mapview.dart\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test1.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/swe_loan_calculator-master/lib/page/test1.dart\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Flutter.main.dart\" />\r\n        <item itemvalue=\"Flutter.main_fullListings.dart\" />\r\n        <item itemvalue=\"Flutter.test1.dart\" />\r\n        <item itemvalue=\"Flutter.mapview.dart\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"36e3cabf-a4c7-4422-8c6c-d3b9aa815eda\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1614581829313</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1614581829313</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"607\" y=\"195\" key=\"#Plugins\" timestamp=\"1615352075003\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"607\" y=\"195\" key=\"#Plugins/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1615352075003\" />\r\n    <state x=\"217\" y=\"0\" key=\"#Project_Structure\" timestamp=\"1616216170429\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"217\" y=\"0\" key=\"#Project_Structure/0.0.1280.680@0.0.1280.680\" timestamp=\"1616216170429\" />\r\n    <state x=\"4352\" y=\"147\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog\" timestamp=\"1616308080261\">\r\n      <screen x=\"3840\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"371\" y=\"88\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1616229222729\" />\r\n    <state x=\"4352\" y=\"147\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616308080261\" />\r\n    <state x=\"380\" y=\"24\" key=\"#com.intellij.unscramble.UnscrambleDialog\" timestamp=\"1616216120581\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\r\n    </state>\r\n    <state x=\"380\" y=\"24\" key=\"#com.intellij.unscramble.UnscrambleDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1616216120581\" />\r\n    <state x=\"92\" y=\"92\" width=\"1736\" height=\"856\" key=\"AVDManager\" timestamp=\"1616397034077\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"77\" y=\"44\" width=\"1158\" height=\"560\" key=\"AVDManager/0.0.1280.680@0.0.1280.680\" timestamp=\"1616235509092\" />\r\n    <state x=\"3956\" y=\"67\" width=\"1737\" height=\"857\" key=\"AVDManager/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616307390331\" />\r\n    <state x=\"92\" y=\"92\" width=\"1736\" height=\"856\" key=\"AVDManager/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397034077\" />\r\n    <state x=\"92\" y=\"92\" width=\"776\" height=\"856\" key=\"DiffContextDialog\" timestamp=\"1615975629275\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"92\" y=\"92\" width=\"776\" height=\"856\" key=\"DiffContextDialog/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1615975629275\" />\r\n    <state x=\"740\" y=\"275\" key=\"FileChooserDialogImpl\" timestamp=\"1616397855510\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"493\" y=\"32\" key=\"FileChooserDialogImpl/0.0.1280.680@0.0.1280.680\" timestamp=\"1616224558208\" />\r\n    <state x=\"4580\" y=\"49\" key=\"FileChooserDialogImpl/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616321413969\" />\r\n    <state x=\"4826\" y=\"49\" key=\"FileChooserDialogImpl/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616252421325\" />\r\n    <state x=\"740\" y=\"275\" key=\"FileChooserDialogImpl/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397855510\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1616397935971\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1236\" height=\"128\" key=\"GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680\" timestamp=\"1616234992642\" />\r\n    <state width=\"1049\" height=\"306\" key=\"GridCell.Tab.0.bottom/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616321427405\" />\r\n    <state width=\"1170\" height=\"276\" key=\"GridCell.Tab.0.bottom/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616252248134\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.bottom/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397935971\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.center\" timestamp=\"1616397935971\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1236\" height=\"128\" key=\"GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680\" timestamp=\"1616234992642\" />\r\n    <state width=\"1049\" height=\"306\" key=\"GridCell.Tab.0.center/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616321427405\" />\r\n    <state width=\"1170\" height=\"276\" key=\"GridCell.Tab.0.center/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616252248134\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.center/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397935971\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.left\" timestamp=\"1616397935971\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1236\" height=\"128\" key=\"GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680\" timestamp=\"1616234992641\" />\r\n    <state width=\"1049\" height=\"306\" key=\"GridCell.Tab.0.left/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616321427405\" />\r\n    <state width=\"1170\" height=\"276\" key=\"GridCell.Tab.0.left/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616252248134\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.left/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397935971\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.right\" timestamp=\"1616397935971\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state width=\"1236\" height=\"128\" key=\"GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680\" timestamp=\"1616234992642\" />\r\n    <state width=\"1049\" height=\"306\" key=\"GridCell.Tab.0.right/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616321427405\" />\r\n    <state width=\"1170\" height=\"276\" key=\"GridCell.Tab.0.right/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616252248134\" />\r\n    <state width=\"919\" height=\"283\" key=\"GridCell.Tab.0.right/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397935971\" />\r\n    <state x=\"480\" y=\"50\" key=\"SettingsEditor\" timestamp=\"1616397856119\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"284\" y=\"0\" key=\"SettingsEditor/0.0.1280.680@0.0.1280.680\" timestamp=\"1616224215457\" />\r\n    <state x=\"4455\" y=\"165\" key=\"SettingsEditor/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616250593779\" />\r\n    <state x=\"480\" y=\"50\" key=\"SettingsEditor/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1616397856119\" />\r\n    <state x=\"-44\" y=\"131\" key=\"SettingsEditor/1920.0.1600.860/0.0.1920.1040@1920.0.1600.860\" timestamp=\"1616397716143\" />\r\n    <state x=\"17\" y=\"6\" width=\"1124\" height=\"823\" key=\"dock-window-1\" timestamp=\"1616309088403\">\r\n      <screen x=\"0\" y=\"0\" width=\"1536\" height=\"824\" />\r\n    </state>\r\n    <state x=\"418\" y=\"7\" width=\"1124\" height=\"823\" key=\"dock-window-1/0.0.1536.824/3840.0.1920.1040@0.0.1536.824\" timestamp=\"1616303774299\" />\r\n    <state x=\"17\" y=\"6\" width=\"1124\" height=\"823\" key=\"dock-window-1/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616309088403\" />\r\n    <state x=\"5269\" y=\"165\" width=\"1124\" height=\"823\" key=\"dock-window-1/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616265963653\" />\r\n    <state x=\"5457\" y=\"58\" width=\"959\" height=\"693\" key=\"dock-window-2\" timestamp=\"1616263937186\">\r\n      <screen x=\"3840\" y=\"0\" width=\"2560\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"5457\" y=\"58\" width=\"959\" height=\"693\" key=\"dock-window-2/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040\" timestamp=\"1616263937186\" />\r\n    <state x=\"4911\" y=\"0\" width=\"849\" height=\"1047\" key=\"dock-window-3\" timestamp=\"1616305570613\">\r\n      <screen x=\"3840\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"4911\" y=\"0\" width=\"849\" height=\"1047\" key=\"dock-window-3/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040\" timestamp=\"1616305570613\" />\r\n    <state x=\"616\" y=\"240\" key=\"run.anything.popup\" timestamp=\"1615382373518\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"616\" y=\"240\" key=\"run.anything.popup/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1615382373518\" />\r\n    <state x=\"623\" y=\"225\" width=\"672\" height=\"678\" key=\"search.everywhere.popup\" timestamp=\"1615995034657\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1040\" />\r\n    </state>\r\n    <state x=\"623\" y=\"225\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040\" timestamp=\"1615995034657\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/main.dart</url>\r\n          <line>39</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/../version2_MAPVIEW/version2_MAPVIEW/lib/main_fullListings.dart</url>\r\n          <option name=\"timeStamp\" value=\"22\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>\r\n          <line>59</line>\r\n          <option name=\"timeStamp\" value=\"25\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>\r\n          <line>144</line>\r\n          <option name=\"timeStamp\" value=\"29\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>\r\n          <line>177</line>\r\n          <option name=\"timeStamp\" value=\"30\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>\r\n          <line>180</line>\r\n          <option name=\"timeStamp\" value=\"31\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>\r\n          <line>41</line>\r\n          <option name=\"timeStamp\" value=\"32\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"42\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\r\n          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/BookmarkView.dart</url>\r\n          <line>69</line>\r\n          <option name=\"timeStamp\" value=\"43\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 4731cee2db459715d0af4cdcbaeadc40ab3ce739)
+++ .idea/workspace.xml	(date 1616563899040)
@@ -3,6 +3,31 @@
   <component name="AndroidLogFilters">
     <option name="TOOL_WINDOW_CONFIGURED_FILTER" value="Show only selected application" />
   </component>
+  <component name="BranchesTreeState">
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="BRANCH:origin/master" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </select>
+  </component>
   <component name="ChangeListManager">
     <list default="true" id="36e3cabf-a4c7-4422-8c6c-d3b9aa815eda" name="Default Changelist" comment="" />
     <option name="SHOW_DIALOG" value="false" />
@@ -10,7 +35,7 @@
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[]" />
+  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[Pixel_4_API_29]" />
   <component name="ExportToHTMLSettings">
     <option name="OUTPUT_DIRECTORY" value="$PROJECT_DIR$/../swe_loan_calculator-master\exportToHTML" />
   </component>
@@ -95,7 +120,40 @@
     </task>
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="CUSTOM_BOOLEAN_PROPERTIES">
+                <map>
+                  <entry key="Show.Git.Branches" value="true" />
+                </map>
+              </option>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/master" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
   <component name="WindowStateProjectService">
+    <state x="845" y="383" key="#Notifications" timestamp="1616563503547">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="845" y="383" key="#Notifications/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616563503547" />
     <state x="607" y="195" key="#Plugins" timestamp="1615352075003">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
@@ -113,12 +171,12 @@
       <screen x="0" y="0" width="1280" height="680" />
     </state>
     <state x="380" y="24" key="#com.intellij.unscramble.UnscrambleDialog/0.0.1280.680@0.0.1280.680" timestamp="1616216120581" />
-    <state x="92" y="92" width="1736" height="856" key="AVDManager" timestamp="1616397034077">
+    <state x="92" y="92" width="1736" height="856" key="AVDManager" timestamp="1616563899001">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="77" y="44" width="1158" height="560" key="AVDManager/0.0.1280.680@0.0.1280.680" timestamp="1616235509092" />
     <state x="3956" y="67" width="1737" height="857" key="AVDManager/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040" timestamp="1616307390331" />
-    <state x="92" y="92" width="1736" height="856" key="AVDManager/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397034077" />
+    <state x="92" y="92" width="1736" height="856" key="AVDManager/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616563899001" />
     <state x="92" y="92" width="776" height="856" key="DiffContextDialog" timestamp="1615975629275">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
@@ -130,41 +188,45 @@
     <state x="4580" y="49" key="FileChooserDialogImpl/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040" timestamp="1616321413969" />
     <state x="4826" y="49" key="FileChooserDialogImpl/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040" timestamp="1616252421325" />
     <state x="740" y="275" key="FileChooserDialogImpl/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397855510" />
-    <state width="919" height="283" key="GridCell.Tab.0.bottom" timestamp="1616397935971">
+    <state width="919" height="283" key="GridCell.Tab.0.bottom" timestamp="1616399754814">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state width="1236" height="128" key="GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680" timestamp="1616234992642" />
     <state width="1049" height="306" key="GridCell.Tab.0.bottom/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040" timestamp="1616321427405" />
     <state width="1170" height="276" key="GridCell.Tab.0.bottom/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040" timestamp="1616252248134" />
-    <state width="919" height="283" key="GridCell.Tab.0.bottom/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397935971" />
-    <state width="919" height="283" key="GridCell.Tab.0.center" timestamp="1616397935971">
+    <state width="919" height="283" key="GridCell.Tab.0.bottom/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616399754814" />
+    <state width="919" height="283" key="GridCell.Tab.0.center" timestamp="1616399754813">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state width="1236" height="128" key="GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680" timestamp="1616234992642" />
     <state width="1049" height="306" key="GridCell.Tab.0.center/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040" timestamp="1616321427405" />
     <state width="1170" height="276" key="GridCell.Tab.0.center/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040" timestamp="1616252248134" />
-    <state width="919" height="283" key="GridCell.Tab.0.center/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397935971" />
-    <state width="919" height="283" key="GridCell.Tab.0.left" timestamp="1616397935971">
+    <state width="919" height="283" key="GridCell.Tab.0.center/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616399754813" />
+    <state width="919" height="283" key="GridCell.Tab.0.left" timestamp="1616399754813">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state width="1236" height="128" key="GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680" timestamp="1616234992641" />
     <state width="1049" height="306" key="GridCell.Tab.0.left/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040" timestamp="1616321427405" />
     <state width="1170" height="276" key="GridCell.Tab.0.left/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040" timestamp="1616252248134" />
-    <state width="919" height="283" key="GridCell.Tab.0.left/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397935971" />
-    <state width="919" height="283" key="GridCell.Tab.0.right" timestamp="1616397935971">
+    <state width="919" height="283" key="GridCell.Tab.0.left/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616399754813" />
+    <state width="919" height="283" key="GridCell.Tab.0.right" timestamp="1616399754813">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state width="1236" height="128" key="GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680" timestamp="1616234992642" />
     <state width="1049" height="306" key="GridCell.Tab.0.right/0.0.1536.824/3840.0.1920.1040@3840.0.1920.1040" timestamp="1616321427405" />
     <state width="1170" height="276" key="GridCell.Tab.0.right/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040" timestamp="1616252248134" />
-    <state width="919" height="283" key="GridCell.Tab.0.right/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397935971" />
-    <state x="480" y="50" key="SettingsEditor" timestamp="1616397856119">
+    <state width="919" height="283" key="GridCell.Tab.0.right/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616399754813" />
+    <state x="480" y="50" key="SettingsEditor" timestamp="1616563898629">
       <screen x="0" y="0" width="1920" height="1040" />
     </state>
     <state x="284" y="0" key="SettingsEditor/0.0.1280.680@0.0.1280.680" timestamp="1616224215457" />
     <state x="4455" y="165" key="SettingsEditor/0.0.1536.824/3840.0.2560.1040@3840.0.2560.1040" timestamp="1616250593779" />
-    <state x="480" y="50" key="SettingsEditor/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616397856119" />
+    <state x="480" y="50" key="SettingsEditor/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616563898629" />
     <state x="-44" y="131" key="SettingsEditor/1920.0.1600.860/0.0.1920.1040@1920.0.1600.860" timestamp="1616397716143" />
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1616563474320">
+      <screen x="0" y="0" width="1920" height="1040" />
+    </state>
+    <state x="769" y="434" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/1920.0.1600.860/0.0.1920.1040@0.0.1920.1040" timestamp="1616563474320" />
     <state x="17" y="6" width="1124" height="823" key="dock-window-1" timestamp="1616309088403">
       <screen x="0" y="0" width="1536" height="824" />
     </state>
@@ -202,38 +264,47 @@
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
-          <line>59</line>
+          <line>57</line>
           <option name="timeStamp" value="25" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
-          <line>144</line>
+          <line>142</line>
           <option name="timeStamp" value="29" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
-          <line>177</line>
+          <line>175</line>
           <option name="timeStamp" value="30" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
-          <line>180</line>
+          <line>178</line>
           <option name="timeStamp" value="31" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
-          <line>41</line>
+          <line>39</line>
           <option name="timeStamp" value="32" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
-          <line>42</line>
+          <line>40</line>
           <option name="timeStamp" value="42" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
           <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/BookmarkView.dart</url>
           <line>69</line>
           <option name="timeStamp" value="43" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
+          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/listviewpage.dart</url>
+          <option name="timeStamp" value="44" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="Dart">
+          <url>file://$PROJECT_DIR$/swe_loan_calculator-master/lib/page/mainpage.dart</url>
+          <line>747</line>
+          <option name="timeStamp" value="45" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
